---
title: Procesamiento de Señales e Imágenes Médicas
coursecode: PSIM-80
date: 2024-10-21
year: 2024
period: 2
timeallowed: Una Hora.
openorclosed: Apuntes con caligrafía propia.
permitted: NO se permite comunciación con compañeros ni préstamo de elementos.
instructions: |
   Responda cada pregunta según las instrucciones de la sección
   
   El examen consta de un total de **50** puntos.
   
studentinfo: true
---

     
## Primera Sección: Preguntas con única respuesta (25 puntos)

Responda las preguntas, teniendo en cuenta el siguiente fragmento de código
```{python}
#| echo: true
#| eval: false
#| output: false
#| label: Primera Sección
data_imagen = pyimag1.dcmread(ruta)
image = data_imagen.pixel_array
pyimag3.imshow(image, cmap="gray")
pyimag3.axis("off")
```

   #. (5 Puntos). El resultado del código es:
      #. Un error de tipo, que informa que image no es de tipo float
      #. Un error de tipo, que informa que image no se puede convertir en float
      #. Despliega una imagen en escala de grises, la imagen se encuentra en _ruta_.
      #. Ninguna de las anteriores.


   #. (5 puntos) ¿Que tipo de imagen permite cargar este código?
      #. Una imagen dicom.
      #. Una imagen png.
      #. Una imagen nii.
      #. Ninguna de las anteriores.

  #. (5 Puntos) Cuales son las características de la imagen en formato dicom?
      #. Es una imagen híbrida, es decir que además de la información visual también tiene metadatos del paciente
      #. Las imágenes dicom son muy utilizadas porque aseguran interoperabilidad entre sistemas.
      #. a y b son correctas.
      #. Ninguna de las anteriores
   
   #. (5 Puntos) La extracción del identificador de paciente se hace utilizando el siguiente comando:
      #. _nombre_paciente = image.PatientID_
      #. _nombre_paciente = data_imagen.PatientID_
      #. _nombre_paciente = pyimag1.PatientID_
      #. _nombre_paciente = pyimag3.PatientID_

   #. (5 Puntos) Suponiendo un funcionamiento perfecto del código, ¿que es pyimag1?
      #. pyimag1 es la ruta donde se encuentra ubicada la imagen que se quiere desplegar.
      #. pyimag1 representa la librería de despliegue visual de python (matplotlib.pyplot).
      #. pyimag1 representa la librería de procesamiento de imágenes de python (opencv).
      #. Ninguna de las anteriores.

## Segunda Sección: Preguntas con múlitple respuesta (25 puntos)

Responda las siguientes preguntas a partir del código presentado abajo. Recuerde que este código se complementa con el presentado previamente.

```{python}
#| echo: true
#| eval: false
#| output: false
#| label: Segunda Sección
kernel1 = pyimag4.array([[-1, -1, -1], [-1, 8, -1], [-1, -1, -1]])
conv1 = pyimag2.filter2D(image, ddepth=-1, kernel=kernel1)
conv1_normalized = pyimag2.normalize(conv1, None, 0, 255, pyimag2.NORM_MINMAX)
```

   #. (10 Puntos) ¿Cual es la función del código?
      #. Aplicar un kernel de convolución a la imagen que se encuentra almacenada en la variable image.
      #. Crear un kernel de convolución para encontrar bordes en una imagen.
      #. Hacer una normalización para pasar de un profundidad de 16bits a un profundidad de 8bits.
      #. Ninguna de las anteriores
   
   #. (5 Puntos) ¿Que representa pyimag2?
      #. Representa a la librería matplotlib.
      #. Representa a la librería opencv.
      #. Representa a la librería numpy.
      #. Representa a la librería pydicom.

   #. (10 Puntos) ¿Cuál es la profundidad de pixel de las variables conv1 y conv1_normalized, respectivamente?
      #. 16 bit y 16 bit
      #. 8 bit y 8 bit
      #. 16 bit y 8 bit
      #. 8 bit y 16 bit
