---
title: "Procesado de Señales e Imágenes Médicas"
description: "ASIM_M -- 104399"
subtitle: "Ingeniería Biomédica"
lang: es
author: "Ph.D. Pablo Eduardo Caicedo Rodríguez"
date: "2024-08-12"
format:
  revealjs: 
    code-tools: true
    code-overflow: wrap
    code-line-numbers: true
    code-copy: true
    fig-align: center
    self-contained: true
    theme: 
      - simple
      - ../../recursos/estilos/metropolis.scss
    slide-number: true
    preview-links: auto
    logo: ../../recursos/imagenes/generales/Escuela_Rosario_logo.png
    css: ../../recursos/estilos/styles_pres.scss
    footer: <https://pablocaicedor.github.io/>
    transition: fade
    progress: true
    scrollable: true
resources:
  - demo.pdf
---

```{r}
#| echo: false
#| eval: true
#| output: false
#| label: Loading R-Libraries

library("DiagrammeR")
library("reticulate")
library("kableExtra")
library("tidyverse")
library("knitr")
library("cowplot")
library("ggfx")

knitr::opts_chunk$set(echo = FALSE)

def.chunk.hook <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
    x <- def.chunk.hook(x, options)
    ifelse(options$size != "normalsize", paste0("\n \\", options$size, "\n\n", x, "\n\n \\normalsize"), x)
})


data_path<-"../../data/"

```

```{python}
#| echo: false
#| eval: true
#| output: false
#| label: Loading Python-Libraries

import numpy as np
import scipy.io as sio
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

data_path="../../data/"

```

# Procesamiento de imágenes

## Prueba

```{python}
#| echo: true
#| eval: true
#| output: true
#| label: label

import sys

print(sys.executable)

```

## Relationships between pixels -- Neighborhood

::: {.callout-tip title="Neighborhood" collapsible="false"}

:::{#fig-neighborhoods layout-ncol=3}


 ![N4-$N_4\left(p\right)$](../../recursos/imagenes/Presentaciones/PSIM/n4.png){fig-align="center" width=250} 

 ![ND-$N_D\left(p\right)$](../../recursos/imagenes/Presentaciones/PSIM/nd.png){fig-align="center" width=250} 

 ![N8-$N_8\left(p\right)$](../../recursos/imagenes/Presentaciones/PSIM/n8.png){fig-align="center" width=250} 

Neighborhoods

:::

:::

## Relationships between pixels -- Adjacency

::: {.callout-tip title="Rules for adjecency" collapsible="false"}

- 4-Adjecncy: Two pixels p and q with values from V are 4-adjacent if q is in the set $N_4\left(p\right)$

- 8-adjacency. Two pixels p and q with values from V are 8-adjacent if q is in the set $N_8\left(p\right)$

- m-adjacency (also called mixed adjacency). Two pixels p and q with values from V are m-adjacent if:
    - q is in $N_4\left(p\right)$.
    - q is in $N_D\left(p\right)$ and the set $N_4\left(p\right) \cap N_4\left(q\right)$ has no pixels whose values are from V.

:::


## Relationships between pixels

 ![Adjacency](../../recursos/imagenes/Presentaciones/PSIM/Adjacency.png){fig-align="center" width=500} 

## Relationships between pixels

:::{layout="[[1,1], [1]]"}

 ![A4](../../recursos/imagenes/Presentaciones/PSIM/a4.png){fig-align="center" width=250 .lightbox} 

 ![A8](../../recursos/imagenes/Presentaciones/PSIM/a8.png){fig-align="center" width=250 .lightbox} 

 ![A-m](../../recursos/imagenes/Presentaciones/PSIM/am.png){fig-align="center" width=250 .lightbox}

:::

## Relationships between pixels -- Path

::: {.callout-tip title="Digital path" collapsible="false"}

It is a sequence of adjacent pixels. 

$$\left(x_0, y_0\right), \left(x_1, y_1\right), \left(x_2, y_2\right), \dots \left(x_n, y_n\right)$$

If $\left(x_0, y_0\right)=\left(x_n, y_n\right)$ the path is known as closed path

Let S represent a subset of pixels in an image. Two pixels p and q are said to be connected in S if there exists a path between them consisting entirely of pixels in S.

:::

## Relationships between pixels -- Path, Connected Subset

![](../../recursos/imagenes/Presentaciones/PSIM/connectedSet.png){fig-align="center" width=500 .lightbox}

## Relationships between pixels -- Regions

![](../../recursos/imagenes/Presentaciones/PSIM/two_regions.png){fig-align="center" width=500 .lightbox}


## Relationships between pixels -- Boundary

![](../../recursos/imagenes/Presentaciones/PSIM/boundary.png){fig-align="center" width=500 .lightbox}

## Relationships between pixels -- Distance

::: {.callout-tip title="Distance" collapsible="false"}

::: columns

:::{.column width="45%"}

![](../../recursos/imagenes/Presentaciones/PSIM/city_block.png){fig-align="center" width=500 .lightbox}

:::

:::{.column width="45%"}

- __City block distance__: $D_4\left(p,q\right) = \lvert x-u\rvert + \lvert y-v \rvert$
- Chessboard distance: $D_8\left(p,q\right) = max \left(\lvert x-u\rvert , \lvert y-v \rvert \right)$
- Euclidean distance: $D_e\left(p,q\right) = \sqrt{\left(x-u\right)^2 + \left(y-v\right)^2}$

:::

:::



:::

## Relationships between pixels

::: {.callout-tip title="Distance" collapsible="false"}

::: columns

:::{.column width="45%"}

![](../../recursos/imagenes/Presentaciones/PSIM/chessboard_distance.png){fig-align="center" width=500 .lightbox}

:::

:::{.column width="45%"}

- City block distance: $D_4\left(p,q\right) = \lvert x-u\rvert + \lvert y-v \rvert$
- __Chessboard distance__: $D_8\left(p,q\right) = max \left(\lvert x-u\rvert , \lvert y-v \rvert \right)$
- Euclidean distance: $D_e\left(p,q\right) = \sqrt{\left(x-u\right)^2 + \left(y-v\right)^2}$

:::

:::



:::

